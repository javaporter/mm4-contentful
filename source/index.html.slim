- @title = "MM Contentful Examples"

section.mm-intro
  .welcome
    .logo= image_tag 'middleman-logo.svg'
    h1 Middleman is Running
    p.doc
      = link_to 'Read Documentation Online', 'https://middlemanapp.com', target: '_blank'

section.contentful-sample
  article
    h2 Example of Just One Article
    - if Dir.exist?(config.data_dir)
      - data.playground.blogPost.each do |id, blogPost|

        / leave this line out if you'd rather cycle through all of the entries
        / this is how you'd just pull in content for one entry
        - if blogPost.id == '3Pe9giC88oQoCmSie6wsSC'

          / if you want to pull in your image assets
          / note the width, your original assets in Contentful can be HUGE, but you specify the width
          img src="#{ blogPost.hero_image.url }?w=900"

          / you'll want your main content to be parsed from markdown
          = Kramdown::Document.new(blogPost.body).to_html

    hr
    h2 Example of List of Articles
    ul
    - if Dir.exist?(config.data_dir)
      - data.playground.blogPost.sort_by{ |id, blogPost| blogPost.title }.each do |id, blogPost|
        li: a(href='/post/#{blogPost.slug}') #{blogPost.title}

    / please note the above code: .sort_by{ |id, blogPost| blogPost.title }
    / this is how you can sort by something, super handy
    / if you want to sort by an array, you can do that as well:
    / .sort_by{ |id, blogPost| [blogPost.something, blogPost.somethingElse] }

    / also, if you want to pull something in with specific keywords, for example:
    / - data.wfp.stories.select { |id, s| s.keyword && s.keyword.include?("featured") }.each do |id, stories|


    hr
    h2 Example of Sorting and Reverse
    p You can sort by date, just include the last four (or whatever number), and reverse the order. This happens like an order of operations, so `last(4).reverse` may be different than `reverse.last(4)`.
    ul
      - if Dir.exist?(config.data_dir)
        - data.playground.blogPost.sort_by{ |id, blogPost| blogPost.date }.last(2).reverse.each do |id, blogPost|
          li
            time= blogPost.date.strftime('%d %b %Y')
            | &nbsp;&mdash;&nbsp;
            = blogPost.title
